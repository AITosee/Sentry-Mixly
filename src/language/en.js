export const EnMsg = {
    //Help text
    SENTRY_HELP_INIT_TOOLTIP:
        'initialize the vision sensor and select the relevant address',
    SENTRY_HELP_SET_DEFAULT: 'sensor algorithm state returns to default',
    SENTRY_HELP_LED:
        'black is the off LED display. When the two colors are the same, the LED status is manual and does not change with the test results',
    SENTRY_HELP_GET_VISION_VALUE: 'get corresponding result of algorithm',
    SENTRY_HELP_DETECTED_VISION_VALUE:
        'whether the target value of the algorithm is detected, return true if detected, otherwise false',

    //Warning text
    SENTRY_WARNING_ON_INIT:
        'do not use serial to connect sentry and the computer to print characters at the same time. This operation will cause confusion of printed characters or abnormal communication at the computer end',

    SENTRY_VISION_ENTERPRISE: '',

    //Set module text
    SENTRY2_NAME: '  Sentry2  ',
    SENTRY1_NAME: '  Sentry1  ',
    SENTRY_BEGIN: 'Initialize',
    SENTRY_PORT: 'port',
    SENTRY_ADDR: 'addr',
    SENTRY_SET_DEFAULT: 'restore default params',
    SENTRY_VISION_CN: '',
    SENTRY_VISION_EN: 'algo',
    SENTRY_STATUS: 'status',
    SENTRY_SET: 'Set',
    SENTRY_SET_PARAMNUM: 'sets of params',
    SENTRY_SET_PARAM: 'param',
    SENTRY_SET_PARAM_GROUP: 'paramset',
    SENTRY_INDEX: 'index',
    SENTRY_CENTER: '',
    SENTRY_X: 'x-cood',
    SENTRY_Y: 'y-cood',
    SENTRY_WEIGHT: 'mini-width',
    SENTRY_HEIGHT: 'mini-height',
    SENTRY_COLOR: 'color',
    SENTRY_LABLE: 'label',
    SENTRY_LED_SET_COLOR: 'LEDs\'  color ',
    SENTRY_LED_SET_COLOR_NOT: ' when targets were detected otherwise ',
    SENTRY_LED_SET_LEVEL: ' luma (1~15)',
    SENTRY_CAMERA_SET_AWB: 'white balance mode',
    SENTRY_VISION_DETECTED: '  detected ',
    SENTRY_VISION_DETECTED_1: '  recognized ',
    SENTRY_VISION_RETURN: '  ',
    SENTRY_VISION_RESULT: 'of result',
    SENTRY_VISION_RESULT_1: 'result',
    SENTRY_VISION_BLOCK: ' blob',
    SENTRY_VISION_DATA: 'returnValue',
    SENTRY_DETECTED_NUMBER: '  num of results',
    SENTRY_GET_QRCODEVALUE: '  string of decoding result',

    // Sentry Vision type
    SENTRY_VISION_VISIONCOLOR: 'Color',
    SENTRY_VISION_VISIONBLOB: 'Blob',
    SENTRY_VISION_VISIONBALL: 'Ball',
    SENTRY_VISION_VISIONAPRILTAG: 'AprilTag',
    SENTRY_VISION_VISIONLINE: 'Line',
    SENTRY_VISION_VISIONLEARNING: 'Learning',
    SENTRY_VISION_VISIONCARD: 'Card',
    SENTRY_VISION_VISIONFACE: 'Face',
    SENTRY_VISION_VISIONBODY: 'Body',
    SENTRY_VISION_VISION20CLASSES: '20Class',
    SENTRY_VISION_VISIONQRCODE: 'QrCode',
    SENTRY_VISION_VISIONMOTIONDETECT: 'Motion',
    SENTRY_VISION_VISIONCUSTOM: 'Custom',

    // Sentry Enable Disable
    SENTRY_ENABLE: 'run',
    SENTRY_DISABLE: 'stop',

    // LED color type
    SENTRY_LED_CLOSE: 'Close',
    SENTRY_LED_RED: 'Red',
    SENTRY_LED_GREEN: 'Green',
    SENTRY_LED_YELLOW: 'Yellow',
    SENTRY_LED_BLUE: 'Blue',
    SENTRY_LED_PURPLE: 'Purple',
    SENTRY_LED_CYAN: 'Cyan',
    SENTRY_LED_WHITE: 'White',

    // Sentry White Balance Type
    SENTRY_AUTO: 'Auto',
    SENTRY_LOCK_AWB: 'Lock',
    SENTRY_WHITE_LIGHT: 'WhiteLight',
    SENTRY_YELLOW_LIGHT: 'YellowLight',

    // Sentry State Value Type
    SENTRY_STATE_VALUE_X: 'x-coord',
    SENTRY_STATE_VALUE_Y: 'y-coord',
    SENTRY_STATE_VALUE_WIDTH: 'width',
    SENTRY_STATE_VALUE_HEIGHT: 'height',
    SENTRY_STATE_VALUE_LABEL: 'label',

    SENTRY_STATE_LINE_EX: 'x-coord of ending point',
    SENTRY_STATE_LINE_EY: 'y-coord of ending point',
    SENTRY_STATE_LINE_SX: 'x-coord of starting point',
    SENTRY_STATE_LINE_SY: 'y-coord of starting point',
    SENTRY_STATE_LINE_A: 'inclination angle',

    SENTRY_STATE_VALUE_R: 'red CH value',
    SENTRY_STATE_VALUE_G: 'green CH value',
    SENTRY_STATE_VALUE_B: 'blue CH value',

    SENTRY_BALLTABLETENNIS: 'Table Tennis',
    SENTRY_BALLTENNIS: 'Tennis',

    // Sentry Color Type
    SENTRY_COLOR_BLACK: 'Black',
    SENTRY_COLOR_WHITE: 'White',
    SENTRY_COLOR_RED: 'Red',
    SENTRY_COLOR_GREEN: 'Green',
    SENTRY_COLOR_BLUE: 'Blue',
    SENTRY_COLOR_YELLOW: 'Yellow',

    // Sentry 20 Class Type
    SENTRY_CLASS20_AIRPLANE: ' Airplane ',
    SENTRY_CLASS20_BICYCLE: ' Bicycle ',
    SENTRY_CLASS20_BIRD: ' Bird ',
    SENTRY_CLASS20_BOAT: ' Ship ',
    SENTRY_CLASS20_BOTTLE: ' Bottle ',
    SENTRY_CLASS20_BUS: '  Bus',
    SENTRY_CLASS20_CAR: ' Car ',
    SENTRY_CLASS20_CAT: '  Cat ',
    SENTRY_CLASS20_CHAIR: ' Chair ',
    SENTRY_CLASS20_COW: ' Cow ',
    SENTRY_CLASS20_TABLE: ' Table ',
    SENTRY_CLASS20_DOG: ' Dog ',
    SENTRY_CLASS20_HORSE: ' Horse ',
    SENTRY_CLASS20_MOTORBIKE: ' Motorcycle ',
    SENTRY_CLASS20_PERSON: ' Person ',
    SENTRY_CLASS20_PLANT: ' Plant ',
    SENTRY_CLASS20_SHEEP: ' Sheep ',
    SENTRY_CLASS20_SOFA: ' Sofa ',
    SENTRY_CLASS20_TRAIN: ' Train ',
    SENTRY_CLASS20_MONITOR: ' Display ',

    // Sentry Card Type
    SENTRY_CARD_TRAFFIC: 'traffic card',
    SENTRY_CARD_FORWARD: 'Forward',
    SENTRY_CARD_LEFT: 'Left',
    SENTRY_CARD_RIGHT: 'Right',
    SENTRY_CARD_TURN_AROUND: 'Turn Around',
    SENTRY_CARD_PARK: 'Park',
    SENTRY_CARD_GREEN_LIGHT: 'Green Light',
    SENTRY_CARD_RED_LIGHT: 'Red Light',
    SENTRY_CARD_SPEED_40: 'Speed 40',
    SENTRY_CARD_SPEED_60: 'Speed 60',
    SENTRY_CARD_SPEED_80: 'Speed 80',
    SENTRY_CARD_SYMBOL: 'symbol card',
    SENTRY_CARD_CHECK: '✔',
    SENTRY_CARD_CROSS: '☓',
    SENTRY_CARD_CIRCLE: '◯',
    SENTRY_CARD_SQUARE: '☐',
    SENTRY_CARD_TRIANGLE: '△',
    SENTRY_CARD_PLUS: '+',
    SENTRY_CARD_MINUS: '-',
    SENTRY_CARD_DIVIDE: '÷',
    SENTRY_CARD_EQUAL: '=',
    SENTRY_CARD_NUMBER: 'digital card',
    SENTRY_CARD_1: '1',
    SENTRY_CARD_2: '2',
    SENTRY_CARD_3: '3',
    SENTRY_CARD_4: '4',
    SENTRY_CARD_5: '5',
    SENTRY_CARD_6: '6',
    SENTRY_CARD_7: '7',
    SENTRY_CARD_8: '8',
    SENTRY_CARD_9: '9',
    SENTRY_CARD_0: '0',

    mixly_Sentry: 'Sentry Vision Sensor',
    Sentry1_Setup: 'Setting Blocks',
    Sentry1_Run: 'Operation Blocks',
    Sentry1_example: 'Example',
}

export const EnCatgories = {
    mixly_Sentry: EnMsg.mixly_Sentry,

    Sentry1_Setup: EnMsg.Sentry1_Setup,
    Sentry1_Run: EnMsg.Sentry1_Run,
    Sentry1_example: EnMsg.Sentry1_example,

    Sentry1_example_Blod: EnMsg.SENTRY_VISION_VISIONBLOB,
    Sentry1_example_Color: EnMsg.SENTRY_VISION_VISIONCOLOR,
    Sentry1_example_ball: EnMsg.SENTRY_VISION_VISIONBALL,
    Sentry1_example_Line: EnMsg.SENTRY_VISION_VISIONLINE,
    Sentry1_example_Card: EnMsg.SENTRY_VISION_VISIONCARD,
    Sentry1_example_body: EnMsg.SENTRY_VISION_VISIONBODY,

    Sentry2_Setup: EnMsg.Sentry1_Setup,
    Sentry2_Run: EnMsg.Sentry1_Run,
    Sentry2_example: EnMsg.Sentry1_example,

    Sentry_example_Blod: EnMsg.SENTRY_VISION_VISIONBLOB,
    Sentry_example_Color: EnMsg.SENTRY_VISION_VISIONCOLOR,
    Sentry_example_AprilTag: EnMsg.SENTRY_VISION_VISIONAPRILTAG,
    Sentry_example_Line: EnMsg.SENTRY_VISION_VISIONLINE,
    Sentry_example_Learning: EnMsg.SENTRY_VISION_VISIONLEARNING,
    Sentry_example_Card: EnMsg.SENTRY_VISION_VISIONCARD,
    Sentry_example_Face: EnMsg.SENTRY_VISION_VISIONFACE,
    Sentry_example_20Class: EnMsg.SENTRY_VISION_VISION20CLASSES,
    Sentry_example_Qr: EnMsg.SENTRY_VISION_VISIONQRCODE,
    Sentry_example_MotionDetect: EnMsg.SENTRY_VISION_VISIONMOTIONDETECT,
}
